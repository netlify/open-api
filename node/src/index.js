/**
 * Netlify's API definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessToken', 'model/AccountMembership', 'model/AccountMembershipCapabilities', 'model/AccountSetup', 'model/AccountType', 'model/AccountUpdateSetup', 'model/AccountUsageCapability', 'model/Asset', 'model/AssetForm', 'model/AssetPublicSignature', 'model/AssetSignature', 'model/AuditLog', 'model/Build', 'model/BuildHook', 'model/BuildLogMsg', 'model/Deploy', 'model/DeployFiles', 'model/DeployKey', 'model/DeployedBranch', 'model/DnsRecord', 'model/DnsZone', 'model/Error', 'model/File', 'model/Form', 'model/Hook', 'model/HookType', 'model/Member', 'model/Metadata', 'model/MinifyOptions', 'model/ModelFunction', 'model/PaymentMethod', 'model/PaymentMethodData', 'model/RepoInfo', 'model/Site', 'model/SiteProcessingSettings', 'model/SiteProcessingSettingsHtml', 'model/SiteProcessingSettingsImages', 'model/SniCertificate', 'model/Snippet', 'model/Submission', 'model/Ticket', 'model/User', 'model/UserOnboardingProgress', 'model/SiteSetup', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessToken'), require('./model/AccountMembership'), require('./model/AccountMembershipCapabilities'), require('./model/AccountSetup'), require('./model/AccountType'), require('./model/AccountUpdateSetup'), require('./model/AccountUsageCapability'), require('./model/Asset'), require('./model/AssetForm'), require('./model/AssetPublicSignature'), require('./model/AssetSignature'), require('./model/AuditLog'), require('./model/Build'), require('./model/BuildHook'), require('./model/BuildLogMsg'), require('./model/Deploy'), require('./model/DeployFiles'), require('./model/DeployKey'), require('./model/DeployedBranch'), require('./model/DnsRecord'), require('./model/DnsZone'), require('./model/Error'), require('./model/File'), require('./model/Form'), require('./model/Hook'), require('./model/HookType'), require('./model/Member'), require('./model/Metadata'), require('./model/MinifyOptions'), require('./model/ModelFunction'), require('./model/PaymentMethod'), require('./model/PaymentMethodData'), require('./model/RepoInfo'), require('./model/Site'), require('./model/SiteProcessingSettings'), require('./model/SiteProcessingSettingsHtml'), require('./model/SiteProcessingSettingsImages'), require('./model/SniCertificate'), require('./model/Snippet'), require('./model/Submission'), require('./model/Ticket'), require('./model/User'), require('./model/UserOnboardingProgress'), require('./model/SiteSetup'), require('./api/DefaultApi'));
  }
}(function(ApiClient, AccessToken, AccountMembership, AccountMembershipCapabilities, AccountSetup, AccountType, AccountUpdateSetup, AccountUsageCapability, Asset, AssetForm, AssetPublicSignature, AssetSignature, AuditLog, Build, BuildHook, BuildLogMsg, Deploy, DeployFiles, DeployKey, DeployedBranch, DnsRecord, DnsZone, Error, File, Form, Hook, HookType, Member, Metadata, MinifyOptions, ModelFunction, PaymentMethod, PaymentMethodData, RepoInfo, Site, SiteProcessingSettings, SiteProcessingSettingsHtml, SiteProcessingSettingsImages, SniCertificate, Snippet, Submission, Ticket, User, UserOnboardingProgress, SiteSetup, DefaultApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var NetlifysApiDefinition = require('index'); // See note below*.
   * var xxxSvc = new NetlifysApiDefinition.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new NetlifysApiDefinition.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new NetlifysApiDefinition.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new NetlifysApiDefinition.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken: AccessToken,
    /**
     * The AccountMembership model constructor.
     * @property {module:model/AccountMembership}
     */
    AccountMembership: AccountMembership,
    /**
     * The AccountMembershipCapabilities model constructor.
     * @property {module:model/AccountMembershipCapabilities}
     */
    AccountMembershipCapabilities: AccountMembershipCapabilities,
    /**
     * The AccountSetup model constructor.
     * @property {module:model/AccountSetup}
     */
    AccountSetup: AccountSetup,
    /**
     * The AccountType model constructor.
     * @property {module:model/AccountType}
     */
    AccountType: AccountType,
    /**
     * The AccountUpdateSetup model constructor.
     * @property {module:model/AccountUpdateSetup}
     */
    AccountUpdateSetup: AccountUpdateSetup,
    /**
     * The AccountUsageCapability model constructor.
     * @property {module:model/AccountUsageCapability}
     */
    AccountUsageCapability: AccountUsageCapability,
    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset: Asset,
    /**
     * The AssetForm model constructor.
     * @property {module:model/AssetForm}
     */
    AssetForm: AssetForm,
    /**
     * The AssetPublicSignature model constructor.
     * @property {module:model/AssetPublicSignature}
     */
    AssetPublicSignature: AssetPublicSignature,
    /**
     * The AssetSignature model constructor.
     * @property {module:model/AssetSignature}
     */
    AssetSignature: AssetSignature,
    /**
     * The AuditLog model constructor.
     * @property {module:model/AuditLog}
     */
    AuditLog: AuditLog,
    /**
     * The Build model constructor.
     * @property {module:model/Build}
     */
    Build: Build,
    /**
     * The BuildHook model constructor.
     * @property {module:model/BuildHook}
     */
    BuildHook: BuildHook,
    /**
     * The BuildLogMsg model constructor.
     * @property {module:model/BuildLogMsg}
     */
    BuildLogMsg: BuildLogMsg,
    /**
     * The Deploy model constructor.
     * @property {module:model/Deploy}
     */
    Deploy: Deploy,
    /**
     * The DeployFiles model constructor.
     * @property {module:model/DeployFiles}
     */
    DeployFiles: DeployFiles,
    /**
     * The DeployKey model constructor.
     * @property {module:model/DeployKey}
     */
    DeployKey: DeployKey,
    /**
     * The DeployedBranch model constructor.
     * @property {module:model/DeployedBranch}
     */
    DeployedBranch: DeployedBranch,
    /**
     * The DnsRecord model constructor.
     * @property {module:model/DnsRecord}
     */
    DnsRecord: DnsRecord,
    /**
     * The DnsZone model constructor.
     * @property {module:model/DnsZone}
     */
    DnsZone: DnsZone,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File: File,
    /**
     * The Form model constructor.
     * @property {module:model/Form}
     */
    Form: Form,
    /**
     * The Hook model constructor.
     * @property {module:model/Hook}
     */
    Hook: Hook,
    /**
     * The HookType model constructor.
     * @property {module:model/HookType}
     */
    HookType: HookType,
    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member: Member,
    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata: Metadata,
    /**
     * The MinifyOptions model constructor.
     * @property {module:model/MinifyOptions}
     */
    MinifyOptions: MinifyOptions,
    /**
     * The ModelFunction model constructor.
     * @property {module:model/ModelFunction}
     */
    ModelFunction: ModelFunction,
    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod: PaymentMethod,
    /**
     * The PaymentMethodData model constructor.
     * @property {module:model/PaymentMethodData}
     */
    PaymentMethodData: PaymentMethodData,
    /**
     * The RepoInfo model constructor.
     * @property {module:model/RepoInfo}
     */
    RepoInfo: RepoInfo,
    /**
     * The Site model constructor.
     * @property {module:model/Site}
     */
    Site: Site,
    /**
     * The SiteProcessingSettings model constructor.
     * @property {module:model/SiteProcessingSettings}
     */
    SiteProcessingSettings: SiteProcessingSettings,
    /**
     * The SiteProcessingSettingsHtml model constructor.
     * @property {module:model/SiteProcessingSettingsHtml}
     */
    SiteProcessingSettingsHtml: SiteProcessingSettingsHtml,
    /**
     * The SiteProcessingSettingsImages model constructor.
     * @property {module:model/SiteProcessingSettingsImages}
     */
    SiteProcessingSettingsImages: SiteProcessingSettingsImages,
    /**
     * The SniCertificate model constructor.
     * @property {module:model/SniCertificate}
     */
    SniCertificate: SniCertificate,
    /**
     * The Snippet model constructor.
     * @property {module:model/Snippet}
     */
    Snippet: Snippet,
    /**
     * The Submission model constructor.
     * @property {module:model/Submission}
     */
    Submission: Submission,
    /**
     * The Ticket model constructor.
     * @property {module:model/Ticket}
     */
    Ticket: Ticket,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserOnboardingProgress model constructor.
     * @property {module:model/UserOnboardingProgress}
     */
    UserOnboardingProgress: UserOnboardingProgress,
    /**
     * The SiteSetup model constructor.
     * @property {module:model/SiteSetup}
     */
    SiteSetup: SiteSetup,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
