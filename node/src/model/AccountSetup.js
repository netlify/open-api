/**
 * Netlify's API definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.NetlifysApiDefinition) {
      root.NetlifysApiDefinition = {};
    }
    root.NetlifysApiDefinition.AccountSetup = factory(root.NetlifysApiDefinition.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AccountSetup model module.
   * @module model/AccountSetup
   * @version 0.2.0
   */

  /**
   * Constructs a new <code>AccountSetup</code>.
   * @alias module:model/AccountSetup
   * @class
   * @param name {String} 
   * @param typeId {String} 
   */
  var exports = function(name, typeId) {
    var _this = this;

    _this['name'] = name;
    _this['type_id'] = typeId;



  };

  /**
   * Constructs a <code>AccountSetup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountSetup} obj Optional instance to populate.
   * @return {module:model/AccountSetup} The populated <code>AccountSetup</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type_id')) {
        obj['type_id'] = ApiClient.convertToType(data['type_id'], 'String');
      }
      if (data.hasOwnProperty('payment_method_id')) {
        obj['payment_method_id'] = ApiClient.convertToType(data['payment_method_id'], 'String');
      }
      if (data.hasOwnProperty('period')) {
        obj['period'] = ApiClient.convertToType(data['period'], 'String');
      }
      if (data.hasOwnProperty('extra_seats_block')) {
        obj['extra_seats_block'] = ApiClient.convertToType(data['extra_seats_block'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} type_id
   */
  exports.prototype['type_id'] = undefined;
  /**
   * @member {String} payment_method_id
   */
  exports.prototype['payment_method_id'] = undefined;
  /**
   * @member {module:model/AccountSetup.PeriodEnum} period
   */
  exports.prototype['period'] = undefined;
  /**
   * @member {Number} extra_seats_block
   */
  exports.prototype['extra_seats_block'] = undefined;


  /**
   * Allowed values for the <code>period</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PeriodEnum = {
    /**
     * value: "monthly"
     * @const
     */
    "monthly": "monthly",
    /**
     * value: "yearly"
     * @const
     */
    "yearly": "yearly"  };


  return exports;
}));


