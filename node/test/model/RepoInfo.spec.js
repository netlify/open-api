/**
 * Netlify's API definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetlifysApiDefinition);
  }
}(this, function(expect, NetlifysApiDefinition) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetlifysApiDefinition.RepoInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RepoInfo', function() {
    it('should create an instance of RepoInfo', function() {
      // uncomment below and update the code to test RepoInfo
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be.a(NetlifysApiDefinition.RepoInfo);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property deployKeyId (base name: "deploy_key_id")', function() {
      // uncomment below and update the code to test the property deployKeyId
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property repoPath (base name: "repo_path")', function() {
      // uncomment below and update the code to test the property repoPath
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property repoBranch (base name: "repo_branch")', function() {
      // uncomment below and update the code to test the property repoBranch
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property dir (base name: "dir")', function() {
      // uncomment below and update the code to test the property dir
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property cmd (base name: "cmd")', function() {
      // uncomment below and update the code to test the property cmd
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property allowedBranches (base name: "allowed_branches")', function() {
      // uncomment below and update the code to test the property allowedBranches
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property publicRepo (base name: "public_repo")', function() {
      // uncomment below and update the code to test the property publicRepo
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property privateLogs (base name: "private_logs")', function() {
      // uncomment below and update the code to test the property privateLogs
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property repoUrl (base name: "repo_url")', function() {
      // uncomment below and update the code to test the property repoUrl
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

    it('should have the property env (base name: "env")', function() {
      // uncomment below and update the code to test the property env
      //var instane = new NetlifysApiDefinition.RepoInfo();
      //expect(instance).to.be();
    });

  });

}));
