/**
 * Netlify's API definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetlifysApiDefinition);
  }
}(this, function(expect, NetlifysApiDefinition) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetlifysApiDefinition.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addMemberToAccount', function() {
      it('should call addMemberToAccount successfully', function(done) {
        //uncomment below and update the code to test addMemberToAccount
        //instance.addMemberToAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelAccount', function() {
      it('should call cancelAccount successfully', function(done) {
        //uncomment below and update the code to test cancelAccount
        //instance.cancelAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configureDNSForSite', function() {
      it('should call configureDNSForSite successfully', function(done) {
        //uncomment below and update the code to test configureDNSForSite
        //instance.configureDNSForSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccount', function() {
      it('should call createAccount successfully', function(done) {
        //uncomment below and update the code to test createAccount
        //instance.createAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDeployKey', function() {
      it('should call createDeployKey successfully', function(done) {
        //uncomment below and update the code to test createDeployKey
        //instance.createDeployKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHookBySiteId', function() {
      it('should call createHookBySiteId successfully', function(done) {
        //uncomment below and update the code to test createHookBySiteId
        //instance.createHookBySiteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSite', function() {
      it('should call createSite successfully', function(done) {
        //uncomment below and update the code to test createSite
        //instance.createSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteAsset', function() {
      it('should call createSiteAsset successfully', function(done) {
        //uncomment below and update the code to test createSiteAsset
        //instance.createSiteAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteBuildHook', function() {
      it('should call createSiteBuildHook successfully', function(done) {
        //uncomment below and update the code to test createSiteBuildHook
        //instance.createSiteBuildHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteDeploy', function() {
      it('should call createSiteDeploy successfully', function(done) {
        //uncomment below and update the code to test createSiteDeploy
        //instance.createSiteDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteInTeam', function() {
      it('should call createSiteInTeam successfully', function(done) {
        //uncomment below and update the code to test createSiteInTeam
        //instance.createSiteInTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteSnippet', function() {
      it('should call createSiteSnippet successfully', function(done) {
        //uncomment below and update the code to test createSiteSnippet
        //instance.createSiteSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTicket', function() {
      it('should call createTicket successfully', function(done) {
        //uncomment below and update the code to test createTicket
        //instance.createTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeployKey', function() {
      it('should call deleteDeployKey successfully', function(done) {
        //uncomment below and update the code to test deleteDeployKey
        //instance.deleteDeployKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHookBySiteId', function() {
      it('should call deleteHookBySiteId successfully', function(done) {
        //uncomment below and update the code to test deleteHookBySiteId
        //instance.deleteHookBySiteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSite', function() {
      it('should call deleteSite successfully', function(done) {
        //uncomment below and update the code to test deleteSite
        //instance.deleteSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteAsset', function() {
      it('should call deleteSiteAsset successfully', function(done) {
        //uncomment below and update the code to test deleteSiteAsset
        //instance.deleteSiteAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteBuildHook', function() {
      it('should call deleteSiteBuildHook successfully', function(done) {
        //uncomment below and update the code to test deleteSiteBuildHook
        //instance.deleteSiteBuildHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteSnippet', function() {
      it('should call deleteSiteSnippet successfully', function(done) {
        //uncomment below and update the code to test deleteSiteSnippet
        //instance.deleteSiteSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSubmission', function() {
      it('should call deleteSubmission successfully', function(done) {
        //uncomment below and update the code to test deleteSubmission
        //instance.deleteSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableHook', function() {
      it('should call enableHook successfully', function(done) {
        //uncomment below and update the code to test enableHook
        //instance.enableHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exchangeTicket', function() {
      it('should call exchangeTicket successfully', function(done) {
        //uncomment below and update the code to test exchangeTicket
        //instance.exchangeTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCurrentUser', function() {
      it('should call getCurrentUser successfully', function(done) {
        //uncomment below and update the code to test getCurrentUser
        //instance.getCurrentUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDNSForSite', function() {
      it('should call getDNSForSite successfully', function(done) {
        //uncomment below and update the code to test getDNSForSite
        //instance.getDNSForSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeploy', function() {
      it('should call getDeploy successfully', function(done) {
        //uncomment below and update the code to test getDeploy
        //instance.getDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeployKey', function() {
      it('should call getDeployKey successfully', function(done) {
        //uncomment below and update the code to test getDeployKey
        //instance.getDeployKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHook', function() {
      it('should call getHook successfully', function(done) {
        //uncomment below and update the code to test getHook
        //instance.getHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSite', function() {
      it('should call getSite successfully', function(done) {
        //uncomment below and update the code to test getSite
        //instance.getSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteAssetInfo', function() {
      it('should call getSiteAssetInfo successfully', function(done) {
        //uncomment below and update the code to test getSiteAssetInfo
        //instance.getSiteAssetInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteAssetPublicSignature', function() {
      it('should call getSiteAssetPublicSignature successfully', function(done) {
        //uncomment below and update the code to test getSiteAssetPublicSignature
        //instance.getSiteAssetPublicSignature(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteBuild', function() {
      it('should call getSiteBuild successfully', function(done) {
        //uncomment below and update the code to test getSiteBuild
        //instance.getSiteBuild(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteBuildHook', function() {
      it('should call getSiteBuildHook successfully', function(done) {
        //uncomment below and update the code to test getSiteBuildHook
        //instance.getSiteBuildHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteDeploy', function() {
      it('should call getSiteDeploy successfully', function(done) {
        //uncomment below and update the code to test getSiteDeploy
        //instance.getSiteDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteFileByPathName', function() {
      it('should call getSiteFileByPathName successfully', function(done) {
        //uncomment below and update the code to test getSiteFileByPathName
        //instance.getSiteFileByPathName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMetadata', function() {
      it('should call getSiteMetadata successfully', function(done) {
        //uncomment below and update the code to test getSiteMetadata
        //instance.getSiteMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteSnippet', function() {
      it('should call getSiteSnippet successfully', function(done) {
        //uncomment below and update the code to test getSiteSnippet
        //instance.getSiteSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccountAuditEvents', function() {
      it('should call listAccountAuditEvents successfully', function(done) {
        //uncomment below and update the code to test listAccountAuditEvents
        //instance.listAccountAuditEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccountTypesForUser', function() {
      it('should call listAccountTypesForUser successfully', function(done) {
        //uncomment below and update the code to test listAccountTypesForUser
        //instance.listAccountTypesForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccountsForUser', function() {
      it('should call listAccountsForUser successfully', function(done) {
        //uncomment below and update the code to test listAccountsForUser
        //instance.listAccountsForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeployKeys', function() {
      it('should call listDeployKeys successfully', function(done) {
        //uncomment below and update the code to test listDeployKeys
        //instance.listDeployKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFormSubmission', function() {
      it('should call listFormSubmission successfully', function(done) {
        //uncomment below and update the code to test listFormSubmission
        //instance.listFormSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFormSubmissions', function() {
      it('should call listFormSubmissions successfully', function(done) {
        //uncomment below and update the code to test listFormSubmissions
        //instance.listFormSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listForms', function() {
      it('should call listForms successfully', function(done) {
        //uncomment below and update the code to test listForms
        //instance.listForms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHookTypes', function() {
      it('should call listHookTypes successfully', function(done) {
        //uncomment below and update the code to test listHookTypes
        //instance.listHookTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHooksBySiteId', function() {
      it('should call listHooksBySiteId successfully', function(done) {
        //uncomment below and update the code to test listHooksBySiteId
        //instance.listHooksBySiteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMembersForAccount', function() {
      it('should call listMembersForAccount successfully', function(done) {
        //uncomment below and update the code to test listMembersForAccount
        //instance.listMembersForAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPaymentMethodsForUser', function() {
      it('should call listPaymentMethodsForUser successfully', function(done) {
        //uncomment below and update the code to test listPaymentMethodsForUser
        //instance.listPaymentMethodsForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteAssets', function() {
      it('should call listSiteAssets successfully', function(done) {
        //uncomment below and update the code to test listSiteAssets
        //instance.listSiteAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteBuildHooks', function() {
      it('should call listSiteBuildHooks successfully', function(done) {
        //uncomment below and update the code to test listSiteBuildHooks
        //instance.listSiteBuildHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteBuilds', function() {
      it('should call listSiteBuilds successfully', function(done) {
        //uncomment below and update the code to test listSiteBuilds
        //instance.listSiteBuilds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteDeployedBranches', function() {
      it('should call listSiteDeployedBranches successfully', function(done) {
        //uncomment below and update the code to test listSiteDeployedBranches
        //instance.listSiteDeployedBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteDeploys', function() {
      it('should call listSiteDeploys successfully', function(done) {
        //uncomment below and update the code to test listSiteDeploys
        //instance.listSiteDeploys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteFiles', function() {
      it('should call listSiteFiles successfully', function(done) {
        //uncomment below and update the code to test listSiteFiles
        //instance.listSiteFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteForms', function() {
      it('should call listSiteForms successfully', function(done) {
        //uncomment below and update the code to test listSiteForms
        //instance.listSiteForms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteSnippets', function() {
      it('should call listSiteSnippets successfully', function(done) {
        //uncomment below and update the code to test listSiteSnippets
        //instance.listSiteSnippets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteSubmissions', function() {
      it('should call listSiteSubmissions successfully', function(done) {
        //uncomment below and update the code to test listSiteSubmissions
        //instance.listSiteSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSites', function() {
      it('should call listSites successfully', function(done) {
        //uncomment below and update the code to test listSites
        //instance.listSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSitesForAccount', function() {
      it('should call listSitesForAccount successfully', function(done) {
        //uncomment below and update the code to test listSitesForAccount
        //instance.listSitesForAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lockDeploy', function() {
      it('should call lockDeploy successfully', function(done) {
        //uncomment below and update the code to test lockDeploy
        //instance.lockDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notifyBuildStart', function() {
      it('should call notifyBuildStart successfully', function(done) {
        //uncomment below and update the code to test notifyBuildStart
        //instance.notifyBuildStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('provisionSiteTLSCertificate', function() {
      it('should call provisionSiteTLSCertificate successfully', function(done) {
        //uncomment below and update the code to test provisionSiteTLSCertificate
        //instance.provisionSiteTLSCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restoreSiteDeploy', function() {
      it('should call restoreSiteDeploy successfully', function(done) {
        //uncomment below and update the code to test restoreSiteDeploy
        //instance.restoreSiteDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('showSiteTLSCertificate', function() {
      it('should call showSiteTLSCertificate successfully', function(done) {
        //uncomment below and update the code to test showSiteTLSCertificate
        //instance.showSiteTLSCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('showTicket', function() {
      it('should call showTicket successfully', function(done) {
        //uncomment below and update the code to test showTicket
        //instance.showTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unlockDeploy', function() {
      it('should call unlockDeploy successfully', function(done) {
        //uncomment below and update the code to test unlockDeploy
        //instance.unlockDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccount', function() {
      it('should call updateAccount successfully', function(done) {
        //uncomment below and update the code to test updateAccount
        //instance.updateAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHook', function() {
      it('should call updateHook successfully', function(done) {
        //uncomment below and update the code to test updateHook
        //instance.updateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSite', function() {
      it('should call updateSite successfully', function(done) {
        //uncomment below and update the code to test updateSite
        //instance.updateSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteAsset', function() {
      it('should call updateSiteAsset successfully', function(done) {
        //uncomment below and update the code to test updateSiteAsset
        //instance.updateSiteAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteBuildHook', function() {
      it('should call updateSiteBuildHook successfully', function(done) {
        //uncomment below and update the code to test updateSiteBuildHook
        //instance.updateSiteBuildHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteBuildLog', function() {
      it('should call updateSiteBuildLog successfully', function(done) {
        //uncomment below and update the code to test updateSiteBuildLog
        //instance.updateSiteBuildLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteDeploy', function() {
      it('should call updateSiteDeploy successfully', function(done) {
        //uncomment below and update the code to test updateSiteDeploy
        //instance.updateSiteDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteMetadata', function() {
      it('should call updateSiteMetadata successfully', function(done) {
        //uncomment below and update the code to test updateSiteMetadata
        //instance.updateSiteMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteSnippet', function() {
      it('should call updateSiteSnippet successfully', function(done) {
        //uncomment below and update the code to test updateSiteSnippet
        //instance.updateSiteSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadDeployFile', function() {
      it('should call uploadDeployFile successfully', function(done) {
        //uncomment below and update the code to test uploadDeployFile
        //instance.uploadDeployFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadDeployFunction', function() {
      it('should call uploadDeployFunction successfully', function(done) {
        //uncomment below and update the code to test uploadDeployFunction
        //instance.uploadDeployFunction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
