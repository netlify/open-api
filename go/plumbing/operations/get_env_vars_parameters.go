// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetEnvVarsParams creates a new GetEnvVarsParams object
// with the default values initialized.
func NewGetEnvVarsParams() *GetEnvVarsParams {
	var ()
	return &GetEnvVarsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetEnvVarsParamsWithTimeout creates a new GetEnvVarsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetEnvVarsParamsWithTimeout(timeout time.Duration) *GetEnvVarsParams {
	var ()
	return &GetEnvVarsParams{

		timeout: timeout,
	}
}

// NewGetEnvVarsParamsWithContext creates a new GetEnvVarsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetEnvVarsParamsWithContext(ctx context.Context) *GetEnvVarsParams {
	var ()
	return &GetEnvVarsParams{

		Context: ctx,
	}
}

// NewGetEnvVarsParamsWithHTTPClient creates a new GetEnvVarsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetEnvVarsParamsWithHTTPClient(client *http.Client) *GetEnvVarsParams {
	var ()
	return &GetEnvVarsParams{
		HTTPClient: client,
	}
}

/*GetEnvVarsParams contains all the parameters to send to the API endpoint
for the get env vars operation typically these are written to a http.Request
*/
type GetEnvVarsParams struct {

	/*AccountID
	  Scope response to account_id

	*/
	AccountID string
	/*ContextName
	  Filter by deploy context

	*/
	ContextName *string
	/*Scope
	  Filter by scope

	*/
	Scope *string
	/*SiteID
	  If specified, only return environment variables set on this site

	*/
	SiteID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get env vars params
func (o *GetEnvVarsParams) WithTimeout(timeout time.Duration) *GetEnvVarsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get env vars params
func (o *GetEnvVarsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get env vars params
func (o *GetEnvVarsParams) WithContext(ctx context.Context) *GetEnvVarsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get env vars params
func (o *GetEnvVarsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get env vars params
func (o *GetEnvVarsParams) WithHTTPClient(client *http.Client) *GetEnvVarsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get env vars params
func (o *GetEnvVarsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get env vars params
func (o *GetEnvVarsParams) WithAccountID(accountID string) *GetEnvVarsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get env vars params
func (o *GetEnvVarsParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithContextName adds the contextName to the get env vars params
func (o *GetEnvVarsParams) WithContextName(contextName *string) *GetEnvVarsParams {
	o.SetContextName(contextName)
	return o
}

// SetContextName adds the contextName to the get env vars params
func (o *GetEnvVarsParams) SetContextName(contextName *string) {
	o.ContextName = contextName
}

// WithScope adds the scope to the get env vars params
func (o *GetEnvVarsParams) WithScope(scope *string) *GetEnvVarsParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get env vars params
func (o *GetEnvVarsParams) SetScope(scope *string) {
	o.Scope = scope
}

// WithSiteID adds the siteID to the get env vars params
func (o *GetEnvVarsParams) WithSiteID(siteID *string) *GetEnvVarsParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get env vars params
func (o *GetEnvVarsParams) SetSiteID(siteID *string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEnvVarsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param account_id
	if err := r.SetPathParam("account_id", o.AccountID); err != nil {
		return err
	}

	if o.ContextName != nil {

		// query param context_name
		var qrContextName string
		if o.ContextName != nil {
			qrContextName = *o.ContextName
		}
		qContextName := qrContextName
		if qContextName != "" {
			if err := r.SetQueryParam("context_name", qContextName); err != nil {
				return err
			}
		}

	}

	if o.Scope != nil {

		// query param scope
		var qrScope string
		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {
			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}

	}

	if o.SiteID != nil {

		// query param site_id
		var qrSiteID string
		if o.SiteID != nil {
			qrSiteID = *o.SiteID
		}
		qSiteID := qrSiteID
		if qSiteID != "" {
			if err := r.SetQueryParam("site_id", qSiteID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
