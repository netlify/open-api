// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/v2/go/models"
)

// UpdatePluginReader is a Reader for the UpdatePlugin structure.
type UpdatePluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdatePluginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdatePluginOK creates a UpdatePluginOK with default headers values
func NewUpdatePluginOK() *UpdatePluginOK {
	return &UpdatePluginOK{}
}

/*UpdatePluginOK handles this case with default header values.

OK
*/
type UpdatePluginOK struct {
	Payload *models.Plugin
}

func (o *UpdatePluginOK) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/plugins/{package}][%d] updatePluginOK  %+v", 200, o.Payload)
}

func (o *UpdatePluginOK) GetPayload() *models.Plugin {
	return o.Payload
}

func (o *UpdatePluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Plugin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePluginDefault creates a UpdatePluginDefault with default headers values
func NewUpdatePluginDefault(code int) *UpdatePluginDefault {
	return &UpdatePluginDefault{
		_statusCode: code,
	}
}

/*UpdatePluginDefault handles this case with default header values.

error
*/
type UpdatePluginDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update plugin default response
func (o *UpdatePluginDefault) Code() int {
	return o._statusCode
}

func (o *UpdatePluginDefault) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/plugins/{package}][%d] updatePlugin default  %+v", o._statusCode, o.Payload)
}

func (o *UpdatePluginDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePluginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
