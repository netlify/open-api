// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSiteEnvVarsParams creates a new GetSiteEnvVarsParams object
// with the default values initialized.
func NewGetSiteEnvVarsParams() *GetSiteEnvVarsParams {
	var ()
	return &GetSiteEnvVarsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSiteEnvVarsParamsWithTimeout creates a new GetSiteEnvVarsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSiteEnvVarsParamsWithTimeout(timeout time.Duration) *GetSiteEnvVarsParams {
	var ()
	return &GetSiteEnvVarsParams{

		timeout: timeout,
	}
}

// NewGetSiteEnvVarsParamsWithContext creates a new GetSiteEnvVarsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSiteEnvVarsParamsWithContext(ctx context.Context) *GetSiteEnvVarsParams {
	var ()
	return &GetSiteEnvVarsParams{

		Context: ctx,
	}
}

// NewGetSiteEnvVarsParamsWithHTTPClient creates a new GetSiteEnvVarsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSiteEnvVarsParamsWithHTTPClient(client *http.Client) *GetSiteEnvVarsParams {
	var ()
	return &GetSiteEnvVarsParams{
		HTTPClient: client,
	}
}

/*
GetSiteEnvVarsParams contains all the parameters to send to the API endpoint
for the get site env vars operation typically these are written to a http.Request
*/
type GetSiteEnvVarsParams struct {

	/*ContextName
	  Filter by deploy context

	*/
	ContextName *string
	/*Scope
	  Filter by scope

	*/
	Scope *string
	/*SiteID
	  Scope response to site_id

	*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get site env vars params
func (o *GetSiteEnvVarsParams) WithTimeout(timeout time.Duration) *GetSiteEnvVarsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get site env vars params
func (o *GetSiteEnvVarsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get site env vars params
func (o *GetSiteEnvVarsParams) WithContext(ctx context.Context) *GetSiteEnvVarsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get site env vars params
func (o *GetSiteEnvVarsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get site env vars params
func (o *GetSiteEnvVarsParams) WithHTTPClient(client *http.Client) *GetSiteEnvVarsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get site env vars params
func (o *GetSiteEnvVarsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContextName adds the contextName to the get site env vars params
func (o *GetSiteEnvVarsParams) WithContextName(contextName *string) *GetSiteEnvVarsParams {
	o.SetContextName(contextName)
	return o
}

// SetContextName adds the contextName to the get site env vars params
func (o *GetSiteEnvVarsParams) SetContextName(contextName *string) {
	o.ContextName = contextName
}

// WithScope adds the scope to the get site env vars params
func (o *GetSiteEnvVarsParams) WithScope(scope *string) *GetSiteEnvVarsParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get site env vars params
func (o *GetSiteEnvVarsParams) SetScope(scope *string) {
	o.Scope = scope
}

// WithSiteID adds the siteID to the get site env vars params
func (o *GetSiteEnvVarsParams) WithSiteID(siteID string) *GetSiteEnvVarsParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get site env vars params
func (o *GetSiteEnvVarsParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSiteEnvVarsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ContextName != nil {

		// query param context_name
		var qrContextName string
		if o.ContextName != nil {
			qrContextName = *o.ContextName
		}
		qContextName := qrContextName
		if qContextName != "" {
			if err := r.SetQueryParam("context_name", qContextName); err != nil {
				return err
			}
		}

	}

	if o.Scope != nil {

		// query param scope
		var qrScope string
		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {
			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
