// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUnlinkSiteRepoParams creates a new UnlinkSiteRepoParams object
// with the default values initialized.
func NewUnlinkSiteRepoParams() *UnlinkSiteRepoParams {
	var ()
	return &UnlinkSiteRepoParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUnlinkSiteRepoParamsWithTimeout creates a new UnlinkSiteRepoParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUnlinkSiteRepoParamsWithTimeout(timeout time.Duration) *UnlinkSiteRepoParams {
	var ()
	return &UnlinkSiteRepoParams{

		timeout: timeout,
	}
}

// NewUnlinkSiteRepoParamsWithContext creates a new UnlinkSiteRepoParams object
// with the default values initialized, and the ability to set a context for a request
func NewUnlinkSiteRepoParamsWithContext(ctx context.Context) *UnlinkSiteRepoParams {
	var ()
	return &UnlinkSiteRepoParams{

		Context: ctx,
	}
}

// NewUnlinkSiteRepoParamsWithHTTPClient creates a new UnlinkSiteRepoParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUnlinkSiteRepoParamsWithHTTPClient(client *http.Client) *UnlinkSiteRepoParams {
	var ()
	return &UnlinkSiteRepoParams{
		HTTPClient: client,
	}
}

/*UnlinkSiteRepoParams contains all the parameters to send to the API endpoint
for the unlink site repo operation typically these are written to a http.Request
*/
type UnlinkSiteRepoParams struct {

	/*SiteID*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the unlink site repo params
func (o *UnlinkSiteRepoParams) WithTimeout(timeout time.Duration) *UnlinkSiteRepoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the unlink site repo params
func (o *UnlinkSiteRepoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the unlink site repo params
func (o *UnlinkSiteRepoParams) WithContext(ctx context.Context) *UnlinkSiteRepoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the unlink site repo params
func (o *UnlinkSiteRepoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the unlink site repo params
func (o *UnlinkSiteRepoParams) WithHTTPClient(client *http.Client) *UnlinkSiteRepoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the unlink site repo params
func (o *UnlinkSiteRepoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSiteID adds the siteID to the unlink site repo params
func (o *UnlinkSiteRepoParams) WithSiteID(siteID string) *UnlinkSiteRepoParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the unlink site repo params
func (o *UnlinkSiteRepoParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *UnlinkSiteRepoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
