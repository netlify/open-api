// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/v2/go/models"
)

// CreateAgentRunnerUploadURLReader is a Reader for the CreateAgentRunnerUploadURL structure.
type CreateAgentRunnerUploadURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAgentRunnerUploadURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAgentRunnerUploadURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAgentRunnerUploadURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateAgentRunnerUploadURLUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateAgentRunnerUploadURLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateAgentRunnerUploadURLOK creates a CreateAgentRunnerUploadURLOK with default headers values
func NewCreateAgentRunnerUploadURLOK() *CreateAgentRunnerUploadURLOK {
	return &CreateAgentRunnerUploadURLOK{}
}

/*
CreateAgentRunnerUploadURLOK handles this case with default header values.

OK
*/
type CreateAgentRunnerUploadURLOK struct {
}

func (o *CreateAgentRunnerUploadURLOK) Error() string {
	return fmt.Sprintf("[POST /agent_runners/upload_url][%d] createAgentRunnerUploadUrlOK ", 200)
}

func (o *CreateAgentRunnerUploadURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAgentRunnerUploadURLBadRequest creates a CreateAgentRunnerUploadURLBadRequest with default headers values
func NewCreateAgentRunnerUploadURLBadRequest() *CreateAgentRunnerUploadURLBadRequest {
	return &CreateAgentRunnerUploadURLBadRequest{}
}

/*
CreateAgentRunnerUploadURLBadRequest handles this case with default header values.

Bad Request
*/
type CreateAgentRunnerUploadURLBadRequest struct {
}

func (o *CreateAgentRunnerUploadURLBadRequest) Error() string {
	return fmt.Sprintf("[POST /agent_runners/upload_url][%d] createAgentRunnerUploadUrlBadRequest ", 400)
}

func (o *CreateAgentRunnerUploadURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAgentRunnerUploadURLUnprocessableEntity creates a CreateAgentRunnerUploadURLUnprocessableEntity with default headers values
func NewCreateAgentRunnerUploadURLUnprocessableEntity() *CreateAgentRunnerUploadURLUnprocessableEntity {
	return &CreateAgentRunnerUploadURLUnprocessableEntity{}
}

/*
CreateAgentRunnerUploadURLUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type CreateAgentRunnerUploadURLUnprocessableEntity struct {
}

func (o *CreateAgentRunnerUploadURLUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /agent_runners/upload_url][%d] createAgentRunnerUploadUrlUnprocessableEntity ", 422)
}

func (o *CreateAgentRunnerUploadURLUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAgentRunnerUploadURLDefault creates a CreateAgentRunnerUploadURLDefault with default headers values
func NewCreateAgentRunnerUploadURLDefault(code int) *CreateAgentRunnerUploadURLDefault {
	return &CreateAgentRunnerUploadURLDefault{
		_statusCode: code,
	}
}

/*
CreateAgentRunnerUploadURLDefault handles this case with default header values.

error
*/
type CreateAgentRunnerUploadURLDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create agent runner upload Url default response
func (o *CreateAgentRunnerUploadURLDefault) Code() int {
	return o._statusCode
}

func (o *CreateAgentRunnerUploadURLDefault) Error() string {
	return fmt.Sprintf("[POST /agent_runners/upload_url][%d] createAgentRunnerUploadUrl default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAgentRunnerUploadURLDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAgentRunnerUploadURLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
