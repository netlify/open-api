// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateDevServerStateParamsBody update dev server state params body
//
// swagger:model updateDevServerStateParamsBody
type UpdateDevServerStateParamsBody struct {

	// error
	Error string `json:"error,omitempty"`

	// state
	// Required: true
	// Enum: [starting live error done]
	State *string `json:"state"`

	// task id
	TaskID string `json:"task_id,omitempty"`
}

// Validate validates this update dev server state params body
func (m *UpdateDevServerStateParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateDevServerStateParamsBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["starting","live","error","done"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateDevServerStateParamsBodyTypeStatePropEnum = append(updateDevServerStateParamsBodyTypeStatePropEnum, v)
	}
}

const (

	// UpdateDevServerStateParamsBodyStateStarting captures enum value "starting"
	UpdateDevServerStateParamsBodyStateStarting string = "starting"

	// UpdateDevServerStateParamsBodyStateLive captures enum value "live"
	UpdateDevServerStateParamsBodyStateLive string = "live"

	// UpdateDevServerStateParamsBodyStateError captures enum value "error"
	UpdateDevServerStateParamsBodyStateError string = "error"

	// UpdateDevServerStateParamsBodyStateDone captures enum value "done"
	UpdateDevServerStateParamsBodyStateDone string = "done"
)

// prop value enum
func (m *UpdateDevServerStateParamsBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateDevServerStateParamsBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateDevServerStateParamsBody) validateState(formats strfmt.Registry) error {

	if err := validate.Required("state", "body", m.State); err != nil {
		return err
	}

	// value enum
	if err := m.validateStateEnum("state", "body", *m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateDevServerStateParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateDevServerStateParamsBody) UnmarshalBinary(b []byte) error {
	var res UpdateDevServerStateParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
